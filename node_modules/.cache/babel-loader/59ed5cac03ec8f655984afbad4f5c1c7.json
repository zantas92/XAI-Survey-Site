{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nconst events_1 = require(\"events\");\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst promisify_1 = __importDefault(require(\"./promisify\"));\n\nconst debug = debug_1.default('agent-base');\n\nfunction isAgent(v) {\n  return Boolean(v) && typeof v.addRequest === 'function';\n}\n\nfunction isSecureEndpoint() {\n  const {\n    stack\n  } = new Error();\n  if (typeof stack !== 'string') return false;\n  return stack.split('\\n').some(l => l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);\n}\n\nfunction createAgent(callback, opts) {\n  return new createAgent.Agent(callback, opts);\n}\n\n(function (createAgent) {\n  /**\n   * Base `http.Agent` implementation.\n   * No pooling/keep-alive is implemented by default.\n   *\n   * @param {Function} callback\n   * @api public\n   */\n  class Agent extends events_1.EventEmitter {\n    constructor(callback, _opts) {\n      super();\n      let opts = _opts;\n\n      if (typeof callback === 'function') {\n        this.callback = callback;\n      } else if (callback) {\n        opts = callback;\n      } // Timeout for the socket to be returned from the callback\n\n\n      this.timeout = null;\n\n      if (opts && typeof opts.timeout === 'number') {\n        this.timeout = opts.timeout;\n      } // These aren't actually used by `agent-base`, but are required\n      // for the TypeScript definition files in `@types/node` :/\n\n\n      this.maxFreeSockets = 1;\n      this.maxSockets = 1;\n      this.maxTotalSockets = Infinity;\n      this.sockets = {};\n      this.freeSockets = {};\n      this.requests = {};\n      this.options = {};\n    }\n\n    get defaultPort() {\n      if (typeof this.explicitDefaultPort === 'number') {\n        return this.explicitDefaultPort;\n      }\n\n      return isSecureEndpoint() ? 443 : 80;\n    }\n\n    set defaultPort(v) {\n      this.explicitDefaultPort = v;\n    }\n\n    get protocol() {\n      if (typeof this.explicitProtocol === 'string') {\n        return this.explicitProtocol;\n      }\n\n      return isSecureEndpoint() ? 'https:' : 'http:';\n    }\n\n    set protocol(v) {\n      this.explicitProtocol = v;\n    }\n\n    callback(req, opts, fn) {\n      throw new Error('\"agent-base\" has no default implementation, you must subclass and override `callback()`');\n    }\n    /**\n     * Called by node-core's \"_http_client.js\" module when creating\n     * a new HTTP request with this Agent instance.\n     *\n     * @api public\n     */\n\n\n    addRequest(req, _opts) {\n      const opts = Object.assign({}, _opts);\n\n      if (typeof opts.secureEndpoint !== 'boolean') {\n        opts.secureEndpoint = isSecureEndpoint();\n      }\n\n      if (opts.host == null) {\n        opts.host = 'localhost';\n      }\n\n      if (opts.port == null) {\n        opts.port = opts.secureEndpoint ? 443 : 80;\n      }\n\n      if (opts.protocol == null) {\n        opts.protocol = opts.secureEndpoint ? 'https:' : 'http:';\n      }\n\n      if (opts.host && opts.path) {\n        // If both a `host` and `path` are specified then it's most\n        // likely the result of a `url.parse()` call... we need to\n        // remove the `path` portion so that `net.connect()` doesn't\n        // attempt to open that as a unix socket file.\n        delete opts.path;\n      }\n\n      delete opts.agent;\n      delete opts.hostname;\n      delete opts._defaultAgent;\n      delete opts.defaultPort;\n      delete opts.createConnection; // Hint to use \"Connection: close\"\n      // XXX: non-documented `http` module API :(\n\n      req._last = true;\n      req.shouldKeepAlive = false;\n      let timedOut = false;\n      let timeoutId = null;\n      const timeoutMs = opts.timeout || this.timeout;\n\n      const onerror = err => {\n        if (req._hadError) return;\n        req.emit('error', err); // For Safety. Some additional errors might fire later on\n        // and we need to make sure we don't double-fire the error event.\n\n        req._hadError = true;\n      };\n\n      const ontimeout = () => {\n        timeoutId = null;\n        timedOut = true;\n        const err = new Error(`A \"socket\" was not created for HTTP request before ${timeoutMs}ms`);\n        err.code = 'ETIMEOUT';\n        onerror(err);\n      };\n\n      const callbackError = err => {\n        if (timedOut) return;\n\n        if (timeoutId !== null) {\n          clearTimeout(timeoutId);\n          timeoutId = null;\n        }\n\n        onerror(err);\n      };\n\n      const onsocket = socket => {\n        if (timedOut) return;\n\n        if (timeoutId != null) {\n          clearTimeout(timeoutId);\n          timeoutId = null;\n        }\n\n        if (isAgent(socket)) {\n          // `socket` is actually an `http.Agent` instance, so\n          // relinquish responsibility for this `req` to the Agent\n          // from here on\n          debug('Callback returned another Agent instance %o', socket.constructor.name);\n          socket.addRequest(req, opts);\n          return;\n        }\n\n        if (socket) {\n          socket.once('free', () => {\n            this.freeSocket(socket, opts);\n          });\n          req.onSocket(socket);\n          return;\n        }\n\n        const err = new Error(`no Duplex stream was returned to agent-base for \\`${req.method} ${req.path}\\``);\n        onerror(err);\n      };\n\n      if (typeof this.callback !== 'function') {\n        onerror(new Error('`callback` is not defined'));\n        return;\n      }\n\n      if (!this.promisifiedCallback) {\n        if (this.callback.length >= 3) {\n          debug('Converting legacy callback function to promise');\n          this.promisifiedCallback = promisify_1.default(this.callback);\n        } else {\n          this.promisifiedCallback = this.callback;\n        }\n      }\n\n      if (typeof timeoutMs === 'number' && timeoutMs > 0) {\n        timeoutId = setTimeout(ontimeout, timeoutMs);\n      }\n\n      if ('port' in opts && typeof opts.port !== 'number') {\n        opts.port = Number(opts.port);\n      }\n\n      try {\n        debug('Resolving socket for %o request: %o', opts.protocol, `${req.method} ${req.path}`);\n        Promise.resolve(this.promisifiedCallback(req, opts)).then(onsocket, callbackError);\n      } catch (err) {\n        Promise.reject(err).catch(callbackError);\n      }\n    }\n\n    freeSocket(socket, opts) {\n      debug('Freeing socket %o %o', socket.constructor.name, opts);\n      socket.destroy();\n    }\n\n    destroy() {\n      debug('Destroying agent %o', this.constructor.name);\n    }\n\n  }\n\n  createAgent.Agent = Agent; // So that `instanceof` works correctly\n\n  createAgent.prototype = createAgent.Agent.prototype;\n})(createAgent || (createAgent = {}));\n\nmodule.exports = createAgent;","map":{"version":3,"mappings":"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","names":["debug","debug_1","isAgent","v","Boolean","addRequest","isSecureEndpoint","stack","Error","split","some","l","indexOf","createAgent","callback","opts","Agent","events_1","constructor","_opts","timeout","maxFreeSockets","maxSockets","maxTotalSockets","Infinity","sockets","freeSockets","requests","options","defaultPort","explicitDefaultPort","protocol","explicitProtocol","req","fn","secureEndpoint","host","port","path","agent","hostname","_defaultAgent","createConnection","_last","shouldKeepAlive","timedOut","timeoutId","timeoutMs","onerror","err","_hadError","emit","ontimeout","code","callbackError","clearTimeout","onsocket","socket","name","once","freeSocket","onSocket","method","promisifiedCallback","length","promisify_1","setTimeout","Number","Promise","resolve","then","reject","catch","destroy","prototype","module"],"sources":["D:\\Kurser\\Exjobb\\Enkät\\Release\\xai-survey-app\\node_modules\\agent-base\\src\\index.ts"],"sourcesContent":["import net from 'net';\nimport http from 'http';\nimport https from 'https';\nimport { Duplex } from 'stream';\nimport { EventEmitter } from 'events';\nimport createDebug from 'debug';\nimport promisify from './promisify';\n\nconst debug = createDebug('agent-base');\n\nfunction isAgent(v: any): v is createAgent.AgentLike {\n\treturn Boolean(v) && typeof v.addRequest === 'function';\n}\n\nfunction isSecureEndpoint(): boolean {\n\tconst { stack } = new Error();\n\tif (typeof stack !== 'string') return false;\n\treturn stack.split('\\n').some(l => l.indexOf('(https.js:') !== -1  || l.indexOf('node:https:') !== -1);\n}\n\nfunction createAgent(opts?: createAgent.AgentOptions): createAgent.Agent;\nfunction createAgent(\n\tcallback: createAgent.AgentCallback,\n\topts?: createAgent.AgentOptions\n): createAgent.Agent;\nfunction createAgent(\n\tcallback?: createAgent.AgentCallback | createAgent.AgentOptions,\n\topts?: createAgent.AgentOptions\n) {\n\treturn new createAgent.Agent(callback, opts);\n}\n\nnamespace createAgent {\n\texport interface ClientRequest extends http.ClientRequest {\n\t\t_last?: boolean;\n\t\t_hadError?: boolean;\n\t\tmethod: string;\n\t}\n\n\texport interface AgentRequestOptions {\n\t\thost?: string;\n\t\tpath?: string;\n\t\t// `port` on `http.RequestOptions` can be a string or undefined,\n\t\t// but `net.TcpNetConnectOpts` expects only a number\n\t\tport: number;\n\t}\n\n\texport interface HttpRequestOptions\n\t\textends AgentRequestOptions,\n\t\t\tOmit<http.RequestOptions, keyof AgentRequestOptions> {\n\t\tsecureEndpoint: false;\n\t}\n\n\texport interface HttpsRequestOptions\n\t\textends AgentRequestOptions,\n\t\t\tOmit<https.RequestOptions, keyof AgentRequestOptions> {\n\t\tsecureEndpoint: true;\n\t}\n\n\texport type RequestOptions = HttpRequestOptions | HttpsRequestOptions;\n\n\texport type AgentLike = Pick<createAgent.Agent, 'addRequest'> | http.Agent;\n\n\texport type AgentCallbackReturn = Duplex | AgentLike;\n\n\texport type AgentCallbackCallback = (\n\t\terr?: Error | null,\n\t\tsocket?: createAgent.AgentCallbackReturn\n\t) => void;\n\n\texport type AgentCallbackPromise = (\n\t\treq: createAgent.ClientRequest,\n\t\topts: createAgent.RequestOptions\n\t) =>\n\t\t| createAgent.AgentCallbackReturn\n\t\t| Promise<createAgent.AgentCallbackReturn>;\n\n\texport type AgentCallback = typeof Agent.prototype.callback;\n\n\texport type AgentOptions = {\n\t\ttimeout?: number;\n\t};\n\n\t/**\n\t * Base `http.Agent` implementation.\n\t * No pooling/keep-alive is implemented by default.\n\t *\n\t * @param {Function} callback\n\t * @api public\n\t */\n\texport class Agent extends EventEmitter {\n\t\tpublic timeout: number | null;\n\t\tpublic maxFreeSockets: number;\n\t\tpublic maxTotalSockets: number;\n\t\tpublic maxSockets: number;\n\t\tpublic sockets: {\n\t\t\t[key: string]: net.Socket[];\n\t\t};\n\t\tpublic freeSockets: {\n\t\t\t[key: string]: net.Socket[];\n\t\t};\n\t\tpublic requests: {\n\t\t\t[key: string]: http.IncomingMessage[];\n\t\t};\n\t\tpublic options: https.AgentOptions;\n\t\tprivate promisifiedCallback?: createAgent.AgentCallbackPromise;\n\t\tprivate explicitDefaultPort?: number;\n\t\tprivate explicitProtocol?: string;\n\n\t\tconstructor(\n\t\t\tcallback?: createAgent.AgentCallback | createAgent.AgentOptions,\n\t\t\t_opts?: createAgent.AgentOptions\n\t\t) {\n\t\t\tsuper();\n\n\t\t\tlet opts = _opts;\n\t\t\tif (typeof callback === 'function') {\n\t\t\t\tthis.callback = callback;\n\t\t\t} else if (callback) {\n\t\t\t\topts = callback;\n\t\t\t}\n\n\t\t\t// Timeout for the socket to be returned from the callback\n\t\t\tthis.timeout = null;\n\t\t\tif (opts && typeof opts.timeout === 'number') {\n\t\t\t\tthis.timeout = opts.timeout;\n\t\t\t}\n\n\t\t\t// These aren't actually used by `agent-base`, but are required\n\t\t\t// for the TypeScript definition files in `@types/node` :/\n\t\t\tthis.maxFreeSockets = 1;\n\t\t\tthis.maxSockets = 1;\n\t\t\tthis.maxTotalSockets = Infinity;\n\t\t\tthis.sockets = {};\n\t\t\tthis.freeSockets = {};\n\t\t\tthis.requests = {};\n\t\t\tthis.options = {};\n\t\t}\n\n\t\tget defaultPort(): number {\n\t\t\tif (typeof this.explicitDefaultPort === 'number') {\n\t\t\t\treturn this.explicitDefaultPort;\n\t\t\t}\n\t\t\treturn isSecureEndpoint() ? 443 : 80;\n\t\t}\n\n\t\tset defaultPort(v: number) {\n\t\t\tthis.explicitDefaultPort = v;\n\t\t}\n\n\t\tget protocol(): string {\n\t\t\tif (typeof this.explicitProtocol === 'string') {\n\t\t\t\treturn this.explicitProtocol;\n\t\t\t}\n\t\t\treturn isSecureEndpoint() ? 'https:' : 'http:';\n\t\t}\n\n\t\tset protocol(v: string) {\n\t\t\tthis.explicitProtocol = v;\n\t\t}\n\n\t\tcallback(\n\t\t\treq: createAgent.ClientRequest,\n\t\t\topts: createAgent.RequestOptions,\n\t\t\tfn: createAgent.AgentCallbackCallback\n\t\t): void;\n\t\tcallback(\n\t\t\treq: createAgent.ClientRequest,\n\t\t\topts: createAgent.RequestOptions\n\t\t):\n\t\t\t| createAgent.AgentCallbackReturn\n\t\t\t| Promise<createAgent.AgentCallbackReturn>;\n\t\tcallback(\n\t\t\treq: createAgent.ClientRequest,\n\t\t\topts: createAgent.AgentOptions,\n\t\t\tfn?: createAgent.AgentCallbackCallback\n\t\t):\n\t\t\t| createAgent.AgentCallbackReturn\n\t\t\t| Promise<createAgent.AgentCallbackReturn>\n\t\t\t| void {\n\t\t\tthrow new Error(\n\t\t\t\t'\"agent-base\" has no default implementation, you must subclass and override `callback()`'\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Called by node-core's \"_http_client.js\" module when creating\n\t\t * a new HTTP request with this Agent instance.\n\t\t *\n\t\t * @api public\n\t\t */\n\t\taddRequest(req: ClientRequest, _opts: RequestOptions): void {\n\t\t\tconst opts: RequestOptions = { ..._opts };\n\n\t\t\tif (typeof opts.secureEndpoint !== 'boolean') {\n\t\t\t\topts.secureEndpoint = isSecureEndpoint();\n\t\t\t}\n\n\t\t\tif (opts.host == null) {\n\t\t\t\topts.host = 'localhost';\n\t\t\t}\n\n\t\t\tif (opts.port == null) {\n\t\t\t\topts.port = opts.secureEndpoint ? 443 : 80;\n\t\t\t}\n\n\t\t\tif (opts.protocol == null) {\n\t\t\t\topts.protocol = opts.secureEndpoint ? 'https:' : 'http:';\n\t\t\t}\n\n\t\t\tif (opts.host && opts.path) {\n\t\t\t\t// If both a `host` and `path` are specified then it's most\n\t\t\t\t// likely the result of a `url.parse()` call... we need to\n\t\t\t\t// remove the `path` portion so that `net.connect()` doesn't\n\t\t\t\t// attempt to open that as a unix socket file.\n\t\t\t\tdelete opts.path;\n\t\t\t}\n\n\t\t\tdelete opts.agent;\n\t\t\tdelete opts.hostname;\n\t\t\tdelete opts._defaultAgent;\n\t\t\tdelete opts.defaultPort;\n\t\t\tdelete opts.createConnection;\n\n\t\t\t// Hint to use \"Connection: close\"\n\t\t\t// XXX: non-documented `http` module API :(\n\t\t\treq._last = true;\n\t\t\treq.shouldKeepAlive = false;\n\n\t\t\tlet timedOut = false;\n\t\t\tlet timeoutId: ReturnType<typeof setTimeout> | null = null;\n\t\t\tconst timeoutMs = opts.timeout || this.timeout;\n\n\t\t\tconst onerror = (err: NodeJS.ErrnoException) => {\n\t\t\t\tif (req._hadError) return;\n\t\t\t\treq.emit('error', err);\n\t\t\t\t// For Safety. Some additional errors might fire later on\n\t\t\t\t// and we need to make sure we don't double-fire the error event.\n\t\t\t\treq._hadError = true;\n\t\t\t};\n\n\t\t\tconst ontimeout = () => {\n\t\t\t\ttimeoutId = null;\n\t\t\t\ttimedOut = true;\n\t\t\t\tconst err: NodeJS.ErrnoException = new Error(\n\t\t\t\t\t`A \"socket\" was not created for HTTP request before ${timeoutMs}ms`\n\t\t\t\t);\n\t\t\t\terr.code = 'ETIMEOUT';\n\t\t\t\tonerror(err);\n\t\t\t};\n\n\t\t\tconst callbackError = (err: NodeJS.ErrnoException) => {\n\t\t\t\tif (timedOut) return;\n\t\t\t\tif (timeoutId !== null) {\n\t\t\t\t\tclearTimeout(timeoutId);\n\t\t\t\t\ttimeoutId = null;\n\t\t\t\t}\n\t\t\t\tonerror(err);\n\t\t\t};\n\n\t\t\tconst onsocket = (socket: AgentCallbackReturn) => {\n\t\t\t\tif (timedOut) return;\n\t\t\t\tif (timeoutId != null) {\n\t\t\t\t\tclearTimeout(timeoutId);\n\t\t\t\t\ttimeoutId = null;\n\t\t\t\t}\n\n\t\t\t\tif (isAgent(socket)) {\n\t\t\t\t\t// `socket` is actually an `http.Agent` instance, so\n\t\t\t\t\t// relinquish responsibility for this `req` to the Agent\n\t\t\t\t\t// from here on\n\t\t\t\t\tdebug(\n\t\t\t\t\t\t'Callback returned another Agent instance %o',\n\t\t\t\t\t\tsocket.constructor.name\n\t\t\t\t\t);\n\t\t\t\t\t(socket as createAgent.Agent).addRequest(req, opts);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (socket) {\n\t\t\t\t\tsocket.once('free', () => {\n\t\t\t\t\t\tthis.freeSocket(socket as net.Socket, opts);\n\t\t\t\t\t});\n\t\t\t\t\treq.onSocket(socket as net.Socket);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst err = new Error(\n\t\t\t\t\t`no Duplex stream was returned to agent-base for \\`${req.method} ${req.path}\\``\n\t\t\t\t);\n\t\t\t\tonerror(err);\n\t\t\t};\n\n\t\t\tif (typeof this.callback !== 'function') {\n\t\t\t\tonerror(new Error('`callback` is not defined'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this.promisifiedCallback) {\n\t\t\t\tif (this.callback.length >= 3) {\n\t\t\t\t\tdebug('Converting legacy callback function to promise');\n\t\t\t\t\tthis.promisifiedCallback = promisify(this.callback);\n\t\t\t\t} else {\n\t\t\t\t\tthis.promisifiedCallback = this.callback;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof timeoutMs === 'number' && timeoutMs > 0) {\n\t\t\t\ttimeoutId = setTimeout(ontimeout, timeoutMs);\n\t\t\t}\n\n\t\t\tif ('port' in opts && typeof opts.port !== 'number') {\n\t\t\t\topts.port = Number(opts.port);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tdebug(\n\t\t\t\t\t'Resolving socket for %o request: %o',\n\t\t\t\t\topts.protocol,\n\t\t\t\t\t`${req.method} ${req.path}`\n\t\t\t\t);\n\t\t\t\tPromise.resolve(this.promisifiedCallback(req, opts)).then(\n\t\t\t\t\tonsocket,\n\t\t\t\t\tcallbackError\n\t\t\t\t);\n\t\t\t} catch (err) {\n\t\t\t\tPromise.reject(err).catch(callbackError);\n\t\t\t}\n\t\t}\n\n\t\tfreeSocket(socket: net.Socket, opts: AgentOptions) {\n\t\t\tdebug('Freeing socket %o %o', socket.constructor.name, opts);\n\t\t\tsocket.destroy();\n\t\t}\n\n\t\tdestroy() {\n\t\t\tdebug('Destroying agent %o', this.constructor.name);\n\t\t}\n\t}\n\n\t// So that `instanceof` works correctly\n\tcreateAgent.prototype = createAgent.Agent.prototype;\n}\n\nexport = createAgent;\n"]},"metadata":{},"sourceType":"script"}