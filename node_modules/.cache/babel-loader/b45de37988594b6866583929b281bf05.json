{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar servicebroker_v1;\n\n(function (servicebroker_v1) {\n  /**\n   * Service Broker API\n   *\n   * The Google Cloud Platform Service Broker API provides Google hosted\n   * implementation of the Open Service Broker API\n   * (https://www.openservicebrokerapi.org/).\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const servicebroker = google.servicebroker('v1');\n   *\n   * @namespace servicebroker\n   * @type {Function}\n   * @version v1\n   * @variation v1\n   * @param {object=} options Options for Servicebroker\n   */\n  class Servicebroker {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.v1 = new Resource$V1(this.context);\n    }\n\n  }\n\n  servicebroker_v1.Servicebroker = Servicebroker;\n\n  class Resource$V1 {\n    constructor(context) {\n      this.context = context;\n    }\n\n    getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://servicebroker.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+resource}:getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://servicebroker.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+resource}:setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://servicebroker.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n  }\n\n  servicebroker_v1.Resource$V1 = Resource$V1;\n})(servicebroker_v1 = exports.servicebroker_v1 || (exports.servicebroker_v1 = {}));","map":{"version":3,"sources":["D:/Kurser/Exjobb/Enk√§t/Release/xai-survey-app/node_modules/googleapis/build/src/apis/servicebroker/v1.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","servicebroker_v1","Servicebroker","constructor","options","google","context","_options","v1","Resource$V1","getIamPolicy","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","setIamPolicy","testIamPermissions"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar servicebroker_v1;\n(function (servicebroker_v1) {\n    /**\n     * Service Broker API\n     *\n     * The Google Cloud Platform Service Broker API provides Google hosted\n     * implementation of the Open Service Broker API\n     * (https://www.openservicebrokerapi.org/).\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const servicebroker = google.servicebroker('v1');\n     *\n     * @namespace servicebroker\n     * @type {Function}\n     * @version v1\n     * @variation v1\n     * @param {object=} options Options for Servicebroker\n     */\n    class Servicebroker {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.v1 = new Resource$V1(this.context);\n        }\n    }\n    servicebroker_v1.Servicebroker = Servicebroker;\n    class Resource$V1 {\n        constructor(context) {\n            this.context = context;\n        }\n        getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://servicebroker.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+resource}:getIamPolicy')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://servicebroker.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+resource}:setIamPolicy')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://servicebroker.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+resource}:testIamPermissions')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    servicebroker_v1.Resource$V1 = Resource$V1;\n})(servicebroker_v1 = exports.servicebroker_v1 || (exports.servicebroker_v1 = {}));\n//# sourceMappingURL=v1.js.map"]},"metadata":{},"sourceType":"script"}