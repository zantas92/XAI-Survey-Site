{"ast":null,"code":"\"use strict\"; // Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Gaxios = void 0;\n\nconst extend_1 = __importDefault(require(\"extend\"));\n\nconst https_1 = require(\"https\");\n\nconst node_fetch_1 = __importDefault(require(\"node-fetch\"));\n\nconst querystring_1 = __importDefault(require(\"querystring\"));\n\nconst is_stream_1 = __importDefault(require(\"is-stream\"));\n\nconst url_1 = require(\"url\");\n\nconst common_1 = require(\"./common\");\n\nconst retry_1 = require(\"./retry\");\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n\nconst fetch = hasFetch() ? window.fetch : node_fetch_1.default;\n\nfunction hasWindow() {\n  return typeof window !== 'undefined' && !!window;\n}\n\nfunction hasFetch() {\n  return hasWindow() && !!window.fetch;\n}\n\nfunction hasBuffer() {\n  return typeof Buffer !== 'undefined';\n}\n\nfunction hasHeader(options, header) {\n  return !!getHeader(options, header);\n}\n\nfunction getHeader(options, header) {\n  header = header.toLowerCase();\n\n  for (const key of Object.keys((options === null || options === void 0 ? void 0 : options.headers) || {})) {\n    if (header === key.toLowerCase()) {\n      return options.headers[key];\n    }\n  }\n\n  return undefined;\n}\n\nlet HttpsProxyAgent;\n\nfunction loadProxy() {\n  const proxy = process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy;\n\n  if (proxy) {\n    HttpsProxyAgent = require('https-proxy-agent');\n  }\n\n  return proxy;\n}\n\nloadProxy();\n\nfunction skipProxy(url) {\n  var _a;\n\n  const noProxyEnv = (_a = process.env.NO_PROXY) !== null && _a !== void 0 ? _a : process.env.no_proxy;\n\n  if (!noProxyEnv) {\n    return false;\n  }\n\n  const noProxyUrls = noProxyEnv.split(',');\n  const parsedURL = new url_1.URL(url);\n  return !!noProxyUrls.find(url => {\n    if (url.startsWith('*.') || url.startsWith('.')) {\n      url = url.replace(/^\\*\\./, '.');\n      return parsedURL.hostname.endsWith(url);\n    } else {\n      return url === parsedURL.origin || url === parsedURL.hostname;\n    }\n  });\n} // Figure out if we should be using a proxy. Only if it's required, load\n// the https-proxy-agent module as it adds startup cost.\n\n\nfunction getProxy(url) {\n  // If there is a match between the no_proxy env variables and the url, then do not proxy\n  if (skipProxy(url)) {\n    return undefined; // If there is not a match between the no_proxy env variables and the url, check to see if there should be a proxy\n  } else {\n    return loadProxy();\n  }\n}\n\nclass Gaxios {\n  /**\n   * The Gaxios class is responsible for making HTTP requests.\n   * @param defaults The default set of options to be used for this instance.\n   */\n  constructor(defaults) {\n    this.agentCache = new Map();\n    this.defaults = defaults || {};\n  }\n  /**\n   * Perform an HTTP request with the given options.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n\n\n  async request() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    opts = this.validateOpts(opts);\n    return this._request(opts);\n  }\n\n  async _defaultAdapter(opts) {\n    const fetchImpl = opts.fetchImplementation || fetch;\n    const res = await fetchImpl(opts.url, opts);\n    const data = await this.getResponseData(opts, res);\n    return this.translateResponse(opts, res, data);\n  }\n  /**\n   * Internal, retryable version of the `request` method.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n\n\n  async _request() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      let translatedResponse;\n\n      if (opts.adapter) {\n        translatedResponse = await opts.adapter(opts, this._defaultAdapter.bind(this));\n      } else {\n        translatedResponse = await this._defaultAdapter(opts);\n      }\n\n      if (!opts.validateStatus(translatedResponse.status)) {\n        throw new common_1.GaxiosError(`Request failed with status code ${translatedResponse.status}`, opts, translatedResponse);\n      }\n\n      return translatedResponse;\n    } catch (e) {\n      const err = e;\n      err.config = opts;\n      const {\n        shouldRetry,\n        config\n      } = await retry_1.getRetryConfig(e);\n\n      if (shouldRetry && config) {\n        err.config.retryConfig.currentRetryAttempt = config.retryConfig.currentRetryAttempt;\n        return this._request(err.config);\n      }\n\n      throw err;\n    }\n  }\n\n  async getResponseData(opts, res) {\n    switch (opts.responseType) {\n      case 'stream':\n        return res.body;\n\n      case 'json':\n        {\n          let data = await res.text();\n\n          try {\n            data = JSON.parse(data);\n          } catch (_a) {// continue\n          }\n\n          return data;\n        }\n\n      case 'arraybuffer':\n        return res.arrayBuffer();\n\n      case 'blob':\n        return res.blob();\n\n      default:\n        return res.text();\n    }\n  }\n  /**\n   * Validates the options, and merges them with defaults.\n   * @param opts The original options passed from the client.\n   */\n\n\n  validateOpts(options) {\n    const opts = extend_1.default(true, {}, this.defaults, options);\n\n    if (!opts.url) {\n      throw new Error('URL is required.');\n    } // baseUrl has been deprecated, remove in 2.0\n\n\n    const baseUrl = opts.baseUrl || opts.baseURL;\n\n    if (baseUrl) {\n      opts.url = baseUrl + opts.url;\n    }\n\n    opts.paramsSerializer = opts.paramsSerializer || this.paramsSerializer;\n\n    if (opts.params && Object.keys(opts.params).length > 0) {\n      let additionalQueryParams = opts.paramsSerializer(opts.params);\n\n      if (additionalQueryParams.startsWith('?')) {\n        additionalQueryParams = additionalQueryParams.slice(1);\n      }\n\n      const prefix = opts.url.includes('?') ? '&' : '?';\n      opts.url = opts.url + prefix + additionalQueryParams;\n    }\n\n    if (typeof options.maxContentLength === 'number') {\n      opts.size = options.maxContentLength;\n    }\n\n    if (typeof options.maxRedirects === 'number') {\n      opts.follow = options.maxRedirects;\n    }\n\n    opts.headers = opts.headers || {};\n\n    if (opts.data) {\n      if (is_stream_1.default.readable(opts.data)) {\n        opts.body = opts.data;\n      } else if (hasBuffer() && Buffer.isBuffer(opts.data)) {\n        // Do not attempt to JSON.stringify() a Buffer:\n        opts.body = opts.data;\n\n        if (!hasHeader(opts, 'Content-Type')) {\n          opts.headers['Content-Type'] = 'application/json';\n        }\n      } else if (typeof opts.data === 'object') {\n        // If www-form-urlencoded content type has been set, but data is\n        // provided as an object, serialize the content using querystring:\n        if (getHeader(opts, 'content-type') === 'application/x-www-form-urlencoded') {\n          opts.body = opts.paramsSerializer(opts.data);\n        } else {\n          if (!hasHeader(opts, 'Content-Type')) {\n            opts.headers['Content-Type'] = 'application/json';\n          }\n\n          opts.body = JSON.stringify(opts.data);\n        }\n      } else {\n        opts.body = opts.data;\n      }\n    }\n\n    opts.validateStatus = opts.validateStatus || this.validateStatus;\n    opts.responseType = opts.responseType || 'json';\n\n    if (!opts.headers['Accept'] && opts.responseType === 'json') {\n      opts.headers['Accept'] = 'application/json';\n    }\n\n    opts.method = opts.method || 'GET';\n    const proxy = getProxy(opts.url);\n\n    if (proxy) {\n      if (this.agentCache.has(proxy)) {\n        opts.agent = this.agentCache.get(proxy);\n      } else {\n        // Proxy is being used in conjunction with mTLS.\n        if (opts.cert && opts.key) {\n          const parsedURL = new url_1.URL(proxy);\n          opts.agent = new HttpsProxyAgent({\n            port: parsedURL.port,\n            host: parsedURL.host,\n            protocol: parsedURL.protocol,\n            cert: opts.cert,\n            key: opts.key\n          });\n        } else {\n          opts.agent = new HttpsProxyAgent(proxy);\n        }\n\n        this.agentCache.set(proxy, opts.agent);\n      }\n    } else if (opts.cert && opts.key) {\n      // Configure client for mTLS:\n      if (this.agentCache.has(opts.key)) {\n        opts.agent = this.agentCache.get(opts.key);\n      } else {\n        opts.agent = new https_1.Agent({\n          cert: opts.cert,\n          key: opts.key\n        });\n        this.agentCache.set(opts.key, opts.agent);\n      }\n    }\n\n    return opts;\n  }\n  /**\n   * By default, throw for any non-2xx status code\n   * @param status status code from the HTTP response\n   */\n\n\n  validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n  /**\n   * Encode a set of key/value pars into a querystring format (?foo=bar&baz=boo)\n   * @param params key value pars to encode\n   */\n\n\n  paramsSerializer(params) {\n    return querystring_1.default.stringify(params);\n  }\n\n  translateResponse(opts, res, data) {\n    // headers need to be converted from a map to an obj\n    const headers = {};\n    res.headers.forEach((value, key) => {\n      headers[key] = value;\n    });\n    return {\n      config: opts,\n      data: data,\n      headers,\n      status: res.status,\n      statusText: res.statusText,\n      // XMLHttpRequestLike\n      request: {\n        responseURL: res.url\n      }\n    };\n  }\n\n}\n\nexports.Gaxios = Gaxios;","map":{"version":3,"mappings":"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","names":["fetch","hasFetch","window","node_fetch_1","hasWindow","hasBuffer","Buffer","hasHeader","options","header","getHeader","toLowerCase","key","Object","keys","headers","undefined","HttpsProxyAgent","loadProxy","proxy","process","env","HTTPS_PROXY","https_proxy","HTTP_PROXY","http_proxy","require","skipProxy","url","noProxyEnv","NO_PROXY","_a","no_proxy","noProxyUrls","split","parsedURL","url_1","find","startsWith","replace","hostname","endsWith","origin","getProxy","Gaxios","constructor","defaults","Map","request","opts","validateOpts","_request","_defaultAdapter","fetchImpl","fetchImplementation","res","data","getResponseData","translateResponse","translatedResponse","adapter","bind","validateStatus","status","common_1","e","err","config","shouldRetry","retry_1","retryConfig","currentRetryAttempt","responseType","body","text","JSON","parse","arrayBuffer","blob","extend_1","Error","baseUrl","baseURL","paramsSerializer","params","length","additionalQueryParams","slice","prefix","includes","maxContentLength","size","maxRedirects","follow","is_stream_1","readable","isBuffer","stringify","method","agentCache","has","agent","get","cert","port","host","protocol","set","https_1","querystring_1","forEach","value","statusText","responseURL","exports"],"sources":["../../src/gaxios.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}